apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: mongodb-outputport-template.1
  title: MongoDB Output Port Template
  description: Create a repository containing the definition of a MongoDB Output Port
  annotations:
    backstage.io/techdocs-ref: dir:.
  mesh:
    icon: https://images.icon-icons.com/2699/PNG/512/mongodb_logo_icon_170943.png
  tags:
    - mongodb
    - outputport
    - output-port
spec:
  generates: componenttype:default/outputport
  owner: agilelab
  type: outputport
  parameters:
    - title: Component metadata
      description: Basic information for this component.
      required:
        - name
        - domain
        - dataproduct
        - description
      properties:
        name:
          title: Name
          type: string
          description: Required name used for display purposes
          ui:field: EntityNamePicker
          default: MongoDB Output Port
          ui:options:
            allowArbitraryValues: true
        description:
          title: Description
          type: string
          description: Help others understand what this Output Port is for
          default: Output Port that exposes information of this Data Product to users and other data products.
        domain:
          title: Domain
          type: string
          description: Domain of the Data Product this Output Port belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
        dataproduct:
          title: Data Product
          type: string
          description: Data Product this Output Port belongs to
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
        identifier:
          title: Identifier
          type: string
          description: A unique identifier for the entity inside the domain. It will not be editable after creation and is expected to be a string that is sequences of [a-zA-Z] separated by any of [-_]
          ui:field: ComponentIdentifierPicker
          ui:options:
            allowArbitraryValues: false
        owner:
          title: Component Owner
          type: string
          description: Automatically selected from the Data Product metadata. Data Product owner.
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependsOn:
          title: Depends on
          type: array
          default: []
          items:
            type: string
            ui:field: EntityRelationsPicker
            ui:fieldName: dataproduct
            relation: hasPart
          description: An Output Port could depend on other Output Ports or storage areas
        tags:
          title: Tags
          type: array
          description: Tags for the component
          default: []
          items:
            type: string
        domainName:
          type: string
          ui:field: EntitySelectionPicker
          ui:fieldName: domain
          ui:property: spec.mesh.name
          ui:options:
            allowArbitraryValues: false
          ui:widget: hidden
        dataproductName:
          type: string
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.mesh.name
          ui:options:
            allowArbitraryValues: false
          ui:widget: hidden

    - title: Terms & Conditions and SLA
      description: Terms & Conditions and Service Level Agreement information for this component.
      required:
        - termsAndConditions
        - intervalOfChange
        - timeliness
        - upTime
      properties:
        termsAndConditions:
          title: Terms and Conditions
          type: string
          description: Required. Terms and Conditions that apply to the data.
          default: Can be used for production purposes.
        intervalOfChange:
          title: Interval of change
          type: string
          description: Required. How often the data is refreshed.
          default: 2BD
        timeliness:
          title: Timeliness
          type: string
          description: Required. Timeliness of the data.
          default: 2BD
        upTime:
          title: Uptime
          type: string
          description: Required. Uptime of the Output Port.
          default: 99.9%

    - title: Data Sharing Agreement
      description: Update the Data Sharing Agreement clauses for this component.
      required:
        - purpose
        - billing
        - security
        - intendedUsage
        - limitations
        - lifeCycle
        - confidentiality
      properties:
        purpose:
          title: Purpose
          type: string
          description: Required. Purpose of the data.
          default: Foundational data for downstream use cases.
        billing:
          title: Billing
          type: string
          description: Required. Billing applied to data usage.
          default: None.
        security:
          title: Security
          type: string
          description: Required. Security policies that apply to the data.
          default: Platform standard security policies.
        intendedUsage:
          title: Intended Usage
          type: string
          description: Required. Intended usage for the data.
          default: Any downstream use cases.
        limitations:
          title: Limitations
          type: string
          description: Required. Limitations of the data.
          default: Needs joining with other datasets (eg customer data) for most analytical use cases.
        lifeCycle:
          title: Lifecycle
          type: string
          description: Required. Lifecycle of the data.
          default: Data loaded every two days and typically never deleted.
        confidentiality:
          title: Confidentiality
          type: string
          description: Required. Confidentiality of the data.
          default: None.

    - title: Subcomponent Definitions
      description: |
        Definitions of the subcomponents that make up this Output Port. 
        It is possible to specify one or more collections to be added to the MongoDB 
        database associated with this Output Port.
      properties:
        subcomponentDefinition:
          type: object
          ui:options:
            displayTitle: false
          properties:
            components:
              title: Collection Definitions
              type: array
              ui:ArrayFieldTemplate: ArrayTableTemplate
              minItems: 1
              items:
                type: object
                ui:ObjectFieldTemplate: TableRowTemplate
                required:
                  - collection
                  - description
                properties:
                  collection:
                    type: string
                    title: Collection
                    description: Name of the collection in the MongoDB database
                    ui:placeholder: Enter a valid collection name
                    ui:field: RegexPicker
                    validation:
                      errorMessage: The collection name must contain only alphanumeric characters, underscores, or dashes
                      regularExpression: ^[a-zA-Z0-9_-]+$
                  description:
                    type: string
                    title: Description
                    description: Description of the subcomponent
                    ui:placeholder: Enter a valid description for the collection
                  jsonschema:
                    type: string
                    title: JSON Schema Validator
                    description: JSON Schema that defines the structure of the collection
                    pattern: ^\s*\{\s*"\$jsonSchema"\s*:\s*\{[\s\S]*\}\s*\}\s*$
                    ui:placeholder: Enter a valid JSON Schema definition
                    ui:widget: textarea
                    ui:options:
                      rows: 10

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: "."
        values:
          name: "${{ parameters.name }}"
          domainName: "${{ parameters.domainName }}"
          dataproductName: "${{ parameters.dataproductName }}"
          description: "${{ parameters.description }}"
          domain: "${{ parameters.domain }}"
          dataproduct: "${{ parameters.dataproduct }}"
          identifier: "${{ parameters.identifier }}"
          owner: "${{ parameters.owner }}"
          dependsOn: "${{ parameters.dependsOn }}"
          tags: "${{ parameters.tags }}"
          processDescription: "${{ parameters.processDescription }}"
          intervalOfChange: "${{ parameters.intervalOfChange }}"
          timeliness: "${{ parameters.timeliness }}"
          upTime: "${{ parameters.upTime }}"
          termsAndConditions: "${{ parameters.termsAndConditions }}"
          endpoint: "${{ parameters.endpoint }}"

          components: "${{ parameters.subcomponentDefinition.components }}"

          purpose: "${{ parameters.purpose }}"
          billing: "${{ parameters.billing }}"
          security: "${{ parameters.security }}"
          intendedUsage: "${{ parameters.intendedUsage }}"
          limitations: "${{ parameters.limitations }}"
          lifeCycle: "${{ parameters.lifeCycle }}"
          confidentiality: "${{ parameters.confidentiality }}"

          useCaseTemplateId: urn:dmb:utm:mongodb-outputport-template:0.0.0
          useCaseTemplateSubId: urn:dmb:utm:mongodb-outputport-subcomponent-template:0.0.0
          infrastructureTemplateId: urn:dmb:itm:mongodb-tech-adapter:1
          rootDirectory: "."

          destination: &destination 'gitlab.com?owner=AgileDMBSandbox%2F${{orgname}}%2Fmesh.repository%2F${{ parameters.domain | replace(r/domain:| |-/, "") }}%2F${{ parameters.dataproduct.split(".")[1] | replace(r/ |-/g, "") }}&repo=${{ parameters.name.split(" ") | join("") | lower }}'

          useCaseTemplateVersion: 0.0.0

    - id: publish
      name: Publish
      action: witboostMeshComponent:publish:gitlab
      input:
        allowedHosts: ["gitlab.com"]
        description: "This is ${{ parameters.name }}"
        repoUrl: *destination
        rootDirectory: "."
        dataproduct: "${{ parameters.dataproduct }}"

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: "${{ steps.publish.output.repoContentsUrl }}"
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: "${{ steps.publish.output.remoteUrl }}"
      - title: Open in catalog
        icon: catalog
        entityRef: "${{ steps.register.output.entityRef }}"
